name: Build Kernel

on:
  workflow_dispatch:
    inputs:
      device:
          description: 'device codename (e.g ysl)'
          required: true
      repo:
          description: 'Kernel source link (dont include . git at the end)'
          required: true
      branch:
          description: 'Kernel source branch'
          required: true
      
env:
  TZ: Asia/Jakarta
  DEVICE: ${{ github.event.inputs.device }}
  REPO: ${{ github.event.inputs.repo }}
  BRANCH: ${{ github.event.inputs.branch }}
  GKI: ${{ github.event.inputs.gki }}
  token: ${{ secrets.TELEGRAM_TOKEN }}
  chat_id: ${{ secrets.TELEGRAM_TO }}

jobs:
  kernel-build:
    runs-on: ubuntu-22.04

    steps:
      - name: Initializing environment
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"
          df -h
          ld --version
          gcc -v
          ar --version
          sudo apt update
          sudo apt install -y bc bison build-essential ccache curl flex glibc-source g++-multilib gcc-multilib binutils-aarch64-linux-gnu git gnupg gperf imagemagick lib32ncurses5-dev lib32readline-dev lib32z1-dev liblz4-tool libncurses5 libncurses5-dev libsdl1.2-dev libssl-dev libwxgtk3.0-gtk3-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev python2 tmate ssh neofetch
          neofetch

      - name: Compiling
        run: |
          if [ "${DEVICE}" = "ysl" ]; then
            wget https://raw.githubusercontent.com/ALprjkt/KernelCI/main/scripts/ysl_build_script.sh
            bash ysl_build_script.sh
            echo "Device not supported yet"
          fi
